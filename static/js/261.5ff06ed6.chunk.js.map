{"version":3,"file":"static/js/261.5ff06ed6.chunk.js","mappings":"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","sources":["components/PhonebookForm/PhonebookForm.js","redux/contacts/selectors.js","components/PhonebookFilter/PhonebookFilter.js","components/PhonebookList/PhonebookItem/PhonebookItem.styled.js","components/PhonebookList/PhonebookItem/PhonebookItem.js","components/PhonebookList/PhonebookList.styled.js","components/PhonebookList/PhonebookList.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/Contacts.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/thunks';\nimport { nanoid } from 'nanoid';\nimport { Button, TextField, Box, Typography } from '@mui/material';\n\nconst PhonebookForm = ({ classes }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      name: event.currentTarget.elements.name.value,\n      number: event.currentTarget.elements.number.value,\n    };\n    dispatch(addContact(newContact));\n    event.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\">\n        Phonebook\n      </Typography>\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"name\"\n          label=\"Name\"\n          type=\"name\"\n          id=\"name\"\n          autoComplete=\"name\"\n          autoFocus\n        />\n        <TextField\n          inputProps={{\n            pattern:\n              '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n          }}\n          margin=\"normal\"\n          type=\"tel\"\n          required\n          fullWidth\n          id=\"number\"\n          label=\"Phone number\"\n          name=\"number\"\n          autoComplete=\"number\"\n        />\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Add contact\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default PhonebookForm;\n","import { createSelector } from 'reselect';\n\nconst contactsStateSelector = state => state.contacts;\n\nexport const contactsLoadingSelector = createSelector(\n  contactsStateSelector,\n  data => data.isLoading\n);\n\nexport const contactsDataSelector = createSelector(\n  contactsStateSelector,\n  data => data.contacts\n);\n\nexport const contactsErrorSelector = createSelector(\n  contactsStateSelector,\n  data => data.error\n);\n\nexport const filterSelector = createSelector(\n  contactsStateSelector,\n  data => data.filter\n);\n","import { React } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/reducers';\nimport { filterSelector } from '../../redux/contacts/selectors';\nimport { TextField } from '@mui/material';\n\nconst PhonebookFilter = () => {\n  const getFilter = useSelector(filterSelector);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <TextField\n        id=\"standard-search\"\n        label=\" Search contact by name\"\n        type=\"search\"\n        variant=\"standard\"\n        value={getFilter}\n        onChange={event => dispatch(changeFilter(event.currentTarget.value))}\n      />\n    </>\n  );\n};\n\nexport default PhonebookFilter;\n","import styled from '@emotion/styled';\n\nexport const ContactItemElement = styled.li`\n  display: flex;\n  justify-content: space-between;\n  font-size: 16px;\n  padding-top: 10px;\n`;\n\nexport const ItemContent = styled.span`\n  margin-right: 20px;\n`;\n\nexport const ButtonStyled = styled.button`\n  font-size: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ContactItemElement,\n  ItemContent,\n  ButtonStyled,\n} from './PhonebookItem.styled';\n\nconst ContactItem = ({ contact, onDelete }) => {\n  const { id, name, number } = contact;\n\n  return (\n    <ContactItemElement>\n      <ItemContent>{name}</ItemContent>\n      <ItemContent>{number}</ItemContent>\n      <ButtonStyled onClick={() => onDelete(id)}> Delete</ButtonStyled>\n    </ContactItemElement>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDelete: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListBlock = styled.ul`\n  font-size: 16px;\n`;\n","import { React } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/thunks';\nimport ContactItem from './PhonebookItem/PhonebookItem';\nimport { ContactListBlock } from './PhonebookList.styled';\nimport * as selectors from '../../redux/contacts/selectors';\n\nconst PhonebookList = () => {\n  const contacts = useSelector(selectors.contactsDataSelector);\n  const filter = useSelector(selectors.filterSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <ContactListBlock>\n      {visibleContacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          contact={contact}\n          onDelete={contactId => dispatch(deleteContact(contactId))}\n        />\n      ))}\n    </ContactListBlock>\n  );\n};\nexport default PhonebookList;\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <Oval color=\"#1976d2\" secondaryColor=\"#000000\" height={100} width={110} />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import { useSelector } from 'react-redux';\nimport PhonebookForm from '../components/PhonebookForm/PhonebookForm';\nimport PhonebookFilter from '../components/PhonebookFilter/PhonebookFilter';\nimport PhonebookList from '../components/PhonebookList/PhonebookList';\nimport Loader from '../components/Loader/Loader';\nimport * as selectors from '../redux/contacts/selectors';\nimport { CssBaseline, Box, Typography, Container } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst Contacts = () => {\n  const theme = createTheme();\n\n  const loading = useSelector(selectors.contactsLoadingSelector);\n  const error = useSelector(selectors.contactsErrorSelector);\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          {loading && !error && <Loader />}\n          {!error && (\n            <>\n              <PhonebookForm />\n              <Typography component=\"h1\" variant=\"h5\">\n                Contacts\n              </Typography>\n              <PhonebookFilter />\n\n              <PhonebookList />\n            </>\n          )}\n          {error && <h1>Something is wrong</h1>}\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Contacts;\n"],"names":["classes","dispatch","useDispatch","Typography","component","variant","Box","onSubmit","event","preventDefault","newContact","id","nanoid","name","currentTarget","elements","value","number","addContact","reset","noValidate","sx","mt","TextField","margin","required","fullWidth","label","type","autoComplete","autoFocus","inputProps","pattern","Button","mb","contactsStateSelector","state","contacts","contactsLoadingSelector","createSelector","data","isLoading","contactsDataSelector","contactsErrorSelector","error","filterSelector","filter","getFilter","useSelector","onChange","changeFilter","ContactItemElement","styled","ItemContent","ButtonStyled","contact","onDelete","onClick","ContactListBlock","selectors","useEffect","fetchContacts","visibleContacts","toLowerCase","includes","map","contactId","deleteContact","LoaderWrapper","color","secondaryColor","height","width","theme","createTheme","loading","ThemeProvider","Container","maxWidth","CssBaseline","marginTop","display","flexDirection","alignItems"],"sourceRoot":""}