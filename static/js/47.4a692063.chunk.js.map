{"version":3,"file":"static/js/47.4a692063.chunk.js","mappings":"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","sources":["components/PhonebookForm/PhonebookForm.styled.js","components/PhonebookForm/PhonebookForm.js","redux/contacts/selectors.js","components/PhonebookFilter/PhonebookFilter.styled.js","components/PhonebookFilter/PhonebookFilter.js","components/PhonebookList/PhonebookItem/PhonebookItem.styled.js","components/PhonebookList/PhonebookItem/PhonebookItem.js","components/PhonebookList/PhonebookList.styled.js","components/PhonebookList/PhonebookList.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactAddForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  font-size: 12px;\n`;\n\nexport const LableForm = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const InputForm = styled.input`\n  border: 1px solid rosybrown;\n`;\n\nexport const ButtonForm = styled.button`\n  background-color: aquamarine;\n  border-color: aquamarine;\n  font-weight: bold;\n`;\n","import { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/thunks';\nimport { nanoid } from 'nanoid';\nimport {\n  ContactAddForm,\n  LableForm,\n  InputForm,\n  ButtonForm,\n} from './PhonebookForm.styled';\n\nconst PhonebookForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      name: event.currentTarget.elements.name.value,\n      number: event.currentTarget.elements.number.value,\n    };\n    dispatch(addContact(newContact));\n    event.currentTarget.reset();\n  };\n\n  return (\n    <div>\n      <ContactAddForm onSubmit={handleSubmit}>\n        <LableForm>\n          Name\n          <InputForm\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </LableForm>\n        <LableForm>\n          Phone number\n          <InputForm\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </LableForm>\n\n        <ButtonForm type=\"submit\">Add contact</ButtonForm>\n      </ContactAddForm>\n    </div>\n  );\n};\n\nexport default PhonebookForm;\n","import { createSelector } from 'reselect';\n\nconst contactsStateSelector = state => state.contacts;\n\nexport const contactsLoadingSelector = createSelector(\n  contactsStateSelector,\n  data => data.isLoading\n);\n\nexport const contactsDataSelector = createSelector(\n  contactsStateSelector,\n  data => data.contacts\n);\n\nexport const contactsErrorSelector = createSelector(\n  contactsStateSelector,\n  data => data.error\n);\n\nexport const filterSelector = createSelector(\n  contactsStateSelector,\n  data => data.filter\n);\n","import styled from '@emotion/styled';\n\nexport const FilterForm = styled.form`\n  text-align: center;\n  padding: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  border: 1px solid rosybrown;\n`;\n","import { React } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/reducers';\nimport { filterSelector } from '../../redux/contacts/selectors';\nimport { FilterForm, FilterInput } from './PhonebookFilter.styled';\n\nconst PhonebookFilter = () => {\n  const getFilter = useSelector(filterSelector);\n  const dispatch = useDispatch();\n  return (\n    <FilterForm>\n      <label>\n        Search contact by name\n        <br />\n        <FilterInput\n          type=\"text\"\n          value={getFilter}\n          onChange={event => dispatch(changeFilter(event.currentTarget.value))}\n        />\n      </label>\n    </FilterForm>\n  );\n};\n\nexport default PhonebookFilter;\n","import styled from '@emotion/styled';\n\nexport const ContactItemElement = styled.li`\n  display: flex;\n  justify-content: space-between;\n  font-size: 16px;\n  padding-top: 10px;\n`;\n\nexport const ItemContent = styled.span`\n  margin-right: 20px;\n`;\n\nexport const ButtonStyled = styled.button`\n  font-size: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ContactItemElement,\n  ItemContent,\n  ButtonStyled,\n} from './PhonebookItem.styled';\n\nconst ContactItem = ({ contact, onDelete }) => {\n  const { id, name, number } = contact;\n\n  return (\n    <ContactItemElement>\n      <ItemContent>{name}</ItemContent>\n      <ItemContent>{number}</ItemContent>\n      <ButtonStyled onClick={() => onDelete(id)}> Delete</ButtonStyled>\n    </ContactItemElement>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDelete: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListBlock = styled.ul`\n  font-size: 16px;\n`;\n","import { React } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/thunks';\nimport ContactItem from './PhonebookItem/PhonebookItem';\nimport { ContactListBlock } from './PhonebookList.styled';\nimport * as selectors from '../../redux/contacts/selectors';\n\nconst PhonebookList = () => {\n  const contacts = useSelector(selectors.contactsDataSelector);\n  const filter = useSelector(selectors.filterSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <ContactListBlock>\n      {visibleContacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          contact={contact}\n          onDelete={contactId => dispatch(deleteContact(contactId))}\n        />\n      ))}\n    </ContactListBlock>\n  );\n};\nexport default PhonebookList;\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <Oval\n        color=\"aquamarine\"\n        secondaryColor=\"#000000\"\n        height={100}\n        width={110}\n      />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  color: #010101;\n  height: 100vh;\n`;\n","import { useSelector } from 'react-redux';\nimport PhonebookForm from '../../components/PhonebookForm/PhonebookForm';\nimport PhonebookFilter from '../../components/PhonebookFilter/PhonebookFilter';\nimport PhonebookList from '../../components/PhonebookList/PhonebookList';\nimport Loader from '../../components/Loader/Loader';\nimport * as selectors from '../../redux/contacts/selectors';\nimport { StyledContainer } from './Contacts.styled.js';\n\nconst Contacts = () => {\n  const loading = useSelector(selectors.contactsLoadingSelector);\n  const error = useSelector(selectors.contactsErrorSelector);\n  return (\n    <>\n      {loading && !error && <Loader />}\n      {!error && (\n        <StyledContainer>\n          <h1>Phonebook</h1>\n          <PhonebookForm />\n          <h2>Contacts</h2>\n          <PhonebookFilter />\n          <PhonebookList />\n        </StyledContainer>\n      )}\n      {error && <h1>Something is wrong</h1>}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactAddForm","styled","LableForm","InputForm","ButtonForm","dispatch","useDispatch","onSubmit","event","preventDefault","newContact","id","nanoid","name","currentTarget","elements","value","number","addContact","reset","type","pattern","title","required","contactsStateSelector","state","contacts","contactsLoadingSelector","createSelector","data","isLoading","contactsDataSelector","contactsErrorSelector","error","filterSelector","filter","FilterForm","FilterInput","getFilter","useSelector","onChange","changeFilter","ContactItemElement","ItemContent","ButtonStyled","contact","onDelete","onClick","ContactListBlock","selectors","useEffect","fetchContacts","visibleContacts","toLowerCase","includes","map","contactId","deleteContact","LoaderWrapper","color","secondaryColor","height","width","StyledContainer","loading"],"sourceRoot":""}