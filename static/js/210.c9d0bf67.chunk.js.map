{"version":3,"file":"static/js/210.c9d0bf67.chunk.js","mappings":"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","sources":["components/PhonebookForm/PhonebookForm.styled.js","components/PhonebookForm/PhonebookForm.js","redux/contacts/selectors.js","components/PhonebookFilter/PhonebookFilter.js","components/PhonebookList/PhonebookItem/PhonebookItem.styled.js","components/PhonebookList/PhonebookItem/PhonebookItem.js","components/PhonebookList/PhonebookList.styled.js","components/PhonebookList/PhonebookList.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledError = styled.p`\n  font-size: 12px;\n  color: red;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { addContact } from '../../redux/contacts/thunks';\nimport { Button, TextField, Box, Typography } from '@mui/material';\nimport { StyledError } from './PhonebookForm.styled';\n\nconst schema = yup.object({\n  name: yup.string().required('This field is required'),\n  number: yup\n    .number()\n    .typeError('Value must be a positive number')\n    .positive('Value must be a positive number')\n    .integer('Value must be an integer')\n    .required('This field is required'),\n});\n\nconst PhonebookForm = () => {\n  const {\n    control,\n    handleSubmit,\n    formState: { errors, isSubmitSuccessful },\n    reset,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSubmitSuccessful]);\n\n  const onSubmitHandler = values => {\n    dispatch(addContact(values));\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\">\n        Phonebook\n      </Typography>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit(onSubmitHandler)}\n        sx={{ mt: 1 }}\n      >\n        <Controller\n          render={({ field }) => (\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"name\"\n              label=\"Name\"\n              type=\"name\"\n              id=\"name\"\n              autoComplete=\"name\"\n              autoFocus\n              {...field}\n            />\n          )}\n          name=\"name\"\n          control={control}\n          defaultValue={''}\n        />\n        {errors.name && <StyledError>{errors.name.message}</StyledError>}\n        <Controller\n          render={({ field }) => (\n            <TextField\n              margin=\"normal\"\n              type=\"tel\"\n              required\n              fullWidth\n              id=\"number\"\n              label=\"Phone number\"\n              name=\"number\"\n              autoComplete=\"number\"\n              {...field}\n            />\n          )}\n          name=\"number\"\n          control={control}\n          defaultValue={''}\n        />\n        {errors.number && <StyledError>{errors.number.message}</StyledError>}\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Add contact\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default PhonebookForm;\n","import { createSelector } from 'reselect';\n\nconst contactsStateSelector = state => state.contacts;\n\nexport const contactsLoadingSelector = createSelector(\n  contactsStateSelector,\n  data => data.isLoading\n);\n\nexport const contactsDataSelector = createSelector(\n  contactsStateSelector,\n  data => data.contacts\n);\n\nexport const contactsErrorSelector = createSelector(\n  contactsStateSelector,\n  data => data.error\n);\n\nexport const filterSelector = createSelector(\n  contactsStateSelector,\n  data => data.filter\n);\n","import { React } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/reducers';\nimport { filterSelector } from '../../redux/contacts/selectors';\nimport { TextField } from '@mui/material';\n\nconst PhonebookFilter = () => {\n  const getFilter = useSelector(filterSelector);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <TextField\n        id=\"standard-search\"\n        label=\" Search contact by name\"\n        type=\"search\"\n        variant=\"standard\"\n        value={getFilter}\n        onChange={event => dispatch(changeFilter(event.currentTarget.value))}\n      />\n    </>\n  );\n};\n\nexport default PhonebookFilter;\n","import styled from '@emotion/styled';\n\nexport const ContactItemElement = styled.li`\n  display: flex;\n  justify-content: space-between;\n  font-size: 16px;\n  padding-top: 10px;\n`;\n\nexport const ItemContent = styled.span`\n  margin-right: 20px;\n`;\n\nexport const ButtonStyled = styled.button`\n  font-size: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ContactItemElement,\n  ItemContent,\n  ButtonStyled,\n} from './PhonebookItem.styled';\n\nconst ContactItem = ({ contact, onDelete }) => {\n  const { id, name, number } = contact;\n\n  return (\n    <ContactItemElement>\n      <ItemContent>{name}</ItemContent>\n      <ItemContent>{number}</ItemContent>\n      <ButtonStyled onClick={() => onDelete(id)}> Delete</ButtonStyled>\n    </ContactItemElement>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDelete: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListBlock = styled.ul`\n  font-size: 16px;\n`;\n","import { React } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/thunks';\nimport ContactItem from './PhonebookItem/PhonebookItem';\nimport { ContactListBlock } from './PhonebookList.styled';\nimport * as selectors from '../../redux/contacts/selectors';\n\nconst PhonebookList = () => {\n  const contacts = useSelector(selectors.contactsDataSelector);\n  const filter = useSelector(selectors.filterSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <ContactListBlock>\n      {visibleContacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          contact={contact}\n          onDelete={contactId => dispatch(deleteContact(contactId))}\n        />\n      ))}\n    </ContactListBlock>\n  );\n};\nexport default PhonebookList;\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <Oval color=\"#1976d2\" secondaryColor=\"#000000\" height={100} width={110} />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import { useSelector } from 'react-redux';\nimport PhonebookForm from '../components/PhonebookForm/PhonebookForm';\nimport PhonebookFilter from '../components/PhonebookFilter/PhonebookFilter';\nimport PhonebookList from '../components/PhonebookList/PhonebookList';\nimport Loader from '../components/Loader/Loader';\nimport * as selectors from '../redux/contacts/selectors';\nimport { CssBaseline, Box, Typography, Container } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst Contacts = () => {\n  const theme = createTheme();\n\n  const loading = useSelector(selectors.contactsLoadingSelector);\n  const error = useSelector(selectors.contactsErrorSelector);\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          {loading && !error && <Loader />}\n          {!error && (\n            <>\n              <PhonebookForm />\n              <Typography component=\"h1\" variant=\"h5\">\n                Contacts\n              </Typography>\n              <PhonebookFilter />\n\n              <PhonebookList />\n            </>\n          )}\n          {error && <h1>Something is wrong</h1>}\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Contacts;\n"],"names":["StyledError","styled","schema","yup","name","required","number","typeError","positive","integer","useForm","resolver","yupResolver","control","handleSubmit","formState","errors","isSubmitSuccessful","reset","dispatch","useDispatch","useEffect","Typography","component","variant","Box","onSubmit","values","addContact","sx","mt","render","field","TextField","margin","fullWidth","label","type","id","autoComplete","autoFocus","defaultValue","message","Button","mb","contactsStateSelector","state","contacts","contactsLoadingSelector","createSelector","data","isLoading","contactsDataSelector","contactsErrorSelector","error","filterSelector","filter","getFilter","useSelector","value","onChange","event","changeFilter","currentTarget","ContactItemElement","ItemContent","ButtonStyled","contact","onDelete","onClick","ContactListBlock","selectors","fetchContacts","visibleContacts","toLowerCase","includes","map","contactId","deleteContact","LoaderWrapper","color","secondaryColor","height","width","theme","createTheme","loading","ThemeProvider","Container","maxWidth","CssBaseline","marginTop","display","flexDirection","alignItems"],"sourceRoot":""}